spring:
  application:
    name: auth-service
  data:
    redis:
      repositories:
        enabled: false
        type: none
  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    initialization-mode: always
    driver-class-name: org.postgresql.Driver
    continue-on-error: true
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show-sql: true
        jdbc:
          time_zone: UTC
    open-in-view: false #this config disables database queries which  may be performed during view rendering

  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 2MB
      max-request-size: 2MB
      resolve-lazily: true

  cache:
    type: redis
    redis:
      time-to-live: 2400000
      cache-null-values: false
      use-key-prefix: true
      key-prefix: tokens
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}
    timeout: 10000
    password: ${REDIS_PASSWORD}
    ttl: 86400000
    connect-timeout: 10000

  jackson:
    serialization:
      fail-on-empty-beans: false
  session:
    store-type: jdbc
  kafka:
    bootstrapServers: ${KAFKA_BOOTSTRAP_SERVERS}
    groupId: ${KAFKA_GROUP_ID}
    consumer:
      group-id: waya
      auto-offset-reset: earliest

  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 120295942246-mf4abvh2gpnvsbcs2u5ffbmrq3a06qu9.apps.googleusercontent.com
            clientSecret: zyVoMw6DAFW1TUWlstyG4_QM
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 160272946020602
            clientSecret: d684f1d33157445aa1d15dad401206bd
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: 32f01a4bdb2d9ab43954
            clientSecret: 04be0187fcf95e4b40e7c9d05a7220c5099084af
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

server:
  port: ${SERVER_PORT:8059}
  error:
    include-message: always
  servlet:
    context-path: /

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_SERVER_URL}
    service-url:
      default-zone: ${EUREKA_SERVER_URL}
  instance:
    preferIpAddress: true

feign:
  client:
    config:
      default:
        connectTimeout: 60000
        readTimeout: 10000
logging:
  level:
    net.sf.jmimemagic.MagicParser: ERROR
    org:
#      hibernate:
#        SQL: DEBUG
#        type:
#          descriptor:
#            sql:
#              BasicBinder: TRACE
      apache:
        kafka:
          clients:
            producer:
              ProducerConfig: ERROR

jwt:
  secret: ${JWT_SECRET:wayas3cr3t}
  expiration: ${JWT_EXPIRATION:31557600000}

#Scheduled Jobs
job:
  cron:
    5amED: 0 0 5 * * ? #5am every day
    5min1318: 0 0-5 13-18 * * ? #Every minute starting at 1pm and 6pm and ending after 5 minutes, and every day

cipher:
  utils:
    value: ${CIPHER_KEY:WALMIFOS}

referral:
  account: ${REFERRAL_ACCOUNT}

app:
  config:
    biller-service:
      base-url: http://157.230.223.54:8181/billspay
    access-service:
      base-url: http://46.101.41.187:8061
    fraud-service:
      base-url: http://157.230.223.54:8084
    logging-service:
      base-url: http://46.101.41.187:8083
    wayagram-profile:
      base-url: http://157.245.84.14:1000
    file-resource:
      base-url: http://46.101.41.187:9098/file-resource/api
    virtual-account:
      base-url: http://46.101.41.187:7090/account-creation-service/api
    wallet-service:
      base-url: http://157.230.223.54:9009/api/v1/wallet
    notification-service:
      base-url: ${NOTIFICATION_SERVICE_BASE_URL:http://68.183.60.114:8085/notification-service}

  auth:
    tokenSecret: ${AUTH_TOKEN_SECRET}
    tokenExpirationMsec: ${TOKEN_EXPIRATION_TIME}
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
api:
  validations:
    phone:
      prefix: 234
      value: Ensure phone number is valid, 13 characters in length and starts with 234
  server:
    deployed: ${SERVER_URL} #Change per Environment
  pin:
    create-pin-by-email:
      description: Send OTP to email, this is for Create PIN `create-pin` post Request
      notes: |
        # Normal Response
        If the request passes all validation, it will Send OTP to email, this is for Create PIN post Request
        # Error Response
        returns with a detailed response about the error.
    create-pin-by-phone:
      description: Send OTP to PhoneNumber, this is for Create PIN `create-pin` post Request
      notes: |
        # Normal Response
        If the request passes all validation, it will Send OTP to PhoneNumber, this is for Create PIN post Request
        # Error Response
        returns with a detailed response about the error.
    create-pin:
      description: Pin Creation Request
      notes: |
        # Normal Response
        This endpoint helps a signed in user create transaction PIN, Authentication Token should be passed on the Request Header
        # Error Response
        Returns with a detailed response about the error.
    validate-pin-by-userId:
      description: Validate a User PIN by the UserId
      notes: |
        # Normal Response
        This endpoint help validate user by Pin and UserId and is meant for service consumption only
        # Error Response
        Returns with a detailed response about the error.
    validate-pin:
      description: Validate a User PIN
      notes: |
        # Normal Response
        This endpoint help validate a signed in user by Pin
        # Error Response
        Returns with a detailed response about the error.
    forgot-pin-by-phone:
      description: Send OTP to Phone, this is for forgot pin post Request
      notes: |
        # Normal Response
        If the request passes all validation, it will Send OTP to PhoneNumber, this is for forgot pin post Request
        # Error Response
        returns with a detailed response about the error.
    forgot-pin-by-email:
      description: Send OTP to email, this is for forgot pin Post Request
      notes: |
        # Normal Response
        This endpoint Sends OTP to an email, this is for forgot pin post Request
        # Error Response
        Returns with a detailed response about the error.
    forgot-pin:
      description: Forgot pin Post Request
      notes: |
        # Normal Response
        This endpoint is used to reset PIN request
        # Error Response
        Returns with a detailed response about the error.

    change-pin-by-phone:
      description: Send OTP to phone, this is for Change PIN POST Request
      notes: |
        # Normal Response
        If the request passes all validation, it will Send OTP to PhoneNumber, this is for Change PIN POST Request
        # Error Response
        returns with a detailed response about the error.
    change-pin-by-email:
      description: Send OTP to email, this is for Change PIN POST Request
      notes: |
        # Normal Response
        This endpoint Sends OTP to an email, this is for Change PIN POST Request
        # Error Response
        Returns with a detailed response about the error.
    change-pin:
      description: Change pin POST Request
      notes: |
        # Normal Response
        This endpoint is used to Change Users PIN, OTP is needed from `/change-pin/byPhone` or `/change-pin/byEmail` GET methods
        # Error Response
        Returns with a detailed response about the error.

  auth:
    create:
      description: Create a new Private User/ Can also be used to create In-App Admin and Super Admin Users
      notes: |
        # Normal Response
        if the request passes all validation, it will create the User obect, a Wallet Account and Profile successfully, as well as send an OTP to the user
        on both phoneNumber and Email
        # Error Response
        returns with a detailed response about the error.

    create-corporate:
      description: Create a new Corporate User. Can also be used to create Corporate Admin Users
      notes: |
          # Normal Response
          if the request passes all validation, it will create the User obect, 2 Wallet Accounts and Profile successfully, as well as send an OTP to the user
          on both phoneNumber and Email
          # Error Response
          returns with a detailed response about the error.

    verify-otp:
      description: Verifies User Creation and Enables the User to Login Successfully
      notes: |
        # Normal Response
        if the request passes all validation, it will verify the newly created Users account and Send a welcome Mail
        # Error Response
        returns with a detailed response about the error.

    verify-phone:
      description: Verifies User Phone Numer after OTP has been Generated for it
      notes: |
        # Normal Response
        It is expected that you first invoke the `/resend-otp/{phoneNumber}` endpoint before a call to this is done to verify
        If Successful, good response is given
        # Error Response
        returns with a detailed response about the error.

    verify-email:
      description: Verifies User Email after OTP has been Generated for it
      notes: |
        # Normal Response
        It is expected that you first invoke the `/resend-otp-mail/{email}` endpoint before a call to this is done to verify
        If Successful, good response is given
        # Error Response
        returns with a detailed response about the error.

    login:
      description: Endpoint to Login to the system With
      notes: |
        # Normal Response
        If User is Enabled and Active, response containing the User's profile is returned, together with the JWT Token to use for Authenticated Requests
        # Error Response
        returns with a detailed response about the error.

    social:
      description: Abstraction to allow Login from any of our Social Integrations
      notes: |
        # Normal Response
        If Successful, good response is given
        # Error Response
        returns with a detailed response about the error.

  corporate-profile:
    create-corporate-profile:
      description: Create a new Corporate Profile (Backend Service to Service use only).
      notes: |
        # Normal Response
        if the request passes all validation, it will create the profile successfully, as well as send an OTP to the user
        # Error Response
        returns with a detailed response about the error.

    update-corporate-profile:
      description: Update a Corporate Profile
      notes: |
        # Normal Response
        if the request passes all validation, it will update the profile successfully.
        # Error Response
        returns with a detailed response about the error.

    update-profile-pic:
      description: Update a Corporate Profile Picture
      notes: |
        # Normal Response
        if the request passes all validation, it will update the profile successfully.
        # Error Response
        returns with a detailed response about the error.

    get-corporate-profile:
      description: Get a Corporate Profile
      notes: |
        # Normal Response
        if the request passes all validation, it will update the profile successfully.
        # Error Response
        returns with a detailed response about the error.

  profile:
    referals:
      description: get all users referrals
      notes: |
        # Normal Response
        if the request passes all validation, it will get the referals successfully, as well as send an OTP to the user
        # Error Response
        returns with a detailed response about the error.

    create-personal-profile:
      description: Create a new Personal Profile (Backend Service to Service use only).
      notes: |
        # Normal Response
        if the request passes all validation, it will create the profile successfully, as well as send an OTP to the user
        # Error Response
        returns with a detailed response about the error.

    get-user-profile:
      description: Get a users profile
      notes: |
        # Normal Response
        if the request passes all validation, it will return with a data, containing the users profile.
        # Error Response
        returns with a detailed response about the error.
    update-user-profile:
      description: updates a users profile
      notes: |
        # Normal Response
        if the request passes all validation, it will update a users profile successfully,
        # Error Response
        returns with a detailed response about the error.

    update-user-profile-image:
      description: updates a users profile image
      notes: |
        # Normal Response
        if the request passes all validation, it will update a users profile image successfully,
        # Error Response
        returns with a detailed response about the error.
        
    update-user-images:
      description: updates a Corporate users Surrounding image
      notes: |
        # Normal Response
        if the request passes all validation, it will update a users profile image successfully,
        # Error Response
        returns with a detailed response about the error.
        
    search-name:
      description: search for a user by name
      notes: |
        # Normal Response
        if the request passes all validation, it will return various search result for a user,
        # Error Response
        returns with a detailed response about the error.

    search-phone:
      description: search for a user by phone number
      notes: |
        # Normal Response
        if the request passes all validation, it will return various search result for a user,
        # Error Response
        returns with a detailed response about the error.

    search-email:
      description: search for a user by email
      notes: |
        # Normal Response
        if the request passes all validation, it will return various search result for a user,
        # Error Response
        returns with a detailed response about the error.

    search-organization:
      description: search for a user by organisation name
      notes: |
        # Normal Response
        if the request passes all validation, it will return various search result for a user,
        # Error Response
        returns with a detailed response about the error.

